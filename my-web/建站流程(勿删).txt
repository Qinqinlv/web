第一步，先创建好对应的文件夹
第二步，将需要的静态资源用bower下载
・・・・・

这个根目录中，所有需要的模块已经写好。
本来打算使用angular做单页面。

但是在具体做的时候，发现使用angular根本就不能将我之前写好的js文件
按照需求引入。angular做单页面，js代码只能写在控制器中。但是我的原生js或jq代码
已经写好，不想再改版成angular能认识的。

之后自己封装了一个路由，通过监听hashchange事件写成。
但是在引入js文件的时候，由于我的模块都是用seajs封装好的，
就算我在路由中重新引入seajs的入口文件，但是这个入口文件依赖的
其它模块只会被加载一次，后面就算多次引入入口文件，之前已经
加载好了的依赖模块不会被重新加载。

这就导致了一个问题：每次切换路由的时候，页面上的html会被替换。
由于不同的html对应不同的js文件，所以需要多次异步加载js，在替换html
的时候，对html重新渲染js效果。

但是seajs入口文件依赖的其它模块只能被加载一次，所以，我的路由在切换的
时候，只会在锚点第一次出现的时候有效果，以后再切换回同一个锚点，就没有
用了，只有html会被替换，seajs入口文件依赖的其它模块不会被重新加载。这样我
的html就没有js效果了。

显然，这又不行。
所以，在下一个版本copy-web中，我将之前所有使用seajs打包的模块，
全部改成了沙箱模式。
这样会产生很多全局变量，但是没有办法啊，总不能将所有模块写在一个沙箱里吧。

将所有模块改写之后，我在路由配置js文件中，引入所有的js文件。
这样，每一个锚点原本对应多少个js文件，我全部写在每一个锚点的mapRoute函数中，
之后每次切换锚点的时候，会异步重新加载写在mapRoute中的所有js文件。
这样就实现了js文件的按需加载。一个简单的单页面做完成了。

